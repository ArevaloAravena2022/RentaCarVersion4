/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import baseDatos.tablaClientes;
import baseDatos.tablaPresupuesto;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Carlos Aravena
 */
public class IngresoClientes extends javax.swing.JFrame {

    /**
     * Creates new form IngresoClientes
     */
    MantenedorPer mp;
    private int opcion;
    String sql;
    String rrr;
    String rut_cliente, nom_cliente, telefono_cliente,
           correo_cliente, comuna_cliente, direccion_cliente, mensaje, menError; 
    public IngresoClientes(int opcion) {
        this.opcion=opcion;
        initComponents();
        Titulos();
    }
    
    public void Titulos()
    {
        switch(opcion)
        {
            case 1: setTitle("Ingresar Clientes");
                break;
            case 2: setTitle("Modificar Clientes");
        }
    }
    
    public void validaciones()
    {
        //Validar datos que no se llenen
        if(this.jtfRut.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Ingresar Rut",
                    "Error de Ingreso",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfRut.requestFocus();
            return;
        }
        if(this.jtfNombreCliente.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Ingresar Nombre",
                    "Error de Ingreso",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfNombreCliente.requestFocus();
            return;
        }
        if(this.jtfTelefonoCliente.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Ingresar Telefono",
                    "Error de Ingreso",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfTelefonoCliente.requestFocus();
            return;
        }
        if(this.jtfCorreoElectronicoCliente.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Ingresar Correo Electronico",
                    "Error de Ingreso",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfCorreoElectronicoCliente.requestFocus();
            return;
        }
        if(this.jcbComunaCliente.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Seleccionar Comuna",
                    "Error de Selección",
                    JOptionPane.ERROR_MESSAGE);
            this.jcbComunaCliente.requestFocus();
            return;
        }
        if(this.jtfDireccionCliente.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debe Ingresar Dirección",
                    "Error de Ingreso",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfDireccionCliente.requestFocus();
            return;
        }
    }
    public void habilitarPanel()
    {
        jtfNombreCliente.setEnabled(true);
        jtfTelefonoCliente.setEnabled(true);
        jtfCorreoElectronicoCliente.setEnabled(true);
        jcbComunaCliente.setEnabled(true);
        jtfDireccionCliente.setEnabled(true);
        jbtGuardar.setEnabled(true);
    }
    public void deshabilitarPanel()
    {
        jtfNombreCliente.setEnabled(false);
        jtfTelefonoCliente.setEnabled(false);
        jtfCorreoElectronicoCliente.setEnabled(false);
        jcbComunaCliente.setEnabled(false);
        jtfDireccionCliente.setEnabled(false);
        jbtGuardar.setEnabled(false);
    }
    public void limpiarCampos()
    {
        deshabilitarPanel();
        jtfNombreCliente.setText("");
        jtfTelefonoCliente.setText("");
        jtfCorreoElectronicoCliente.setText("");
        jcbComunaCliente.setSelectedIndex(0);
        jtfDireccionCliente.setText("");
        jtfRut.setText("");
        jtfRut.requestFocus();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtfRut = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbtBuscarClientes = new javax.swing.JButton();
        jbtCancelarClientes = new javax.swing.JButton();
        jbtVolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfNombreCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfTelefonoCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfCorreoElectronicoCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbComunaCliente = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jtfDireccionCliente = new javax.swing.JTextField();
        jbtGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes:"));

        jLabel1.setText("Ingresar R.U.T");

        jbtBuscarClientes.setText("Buscar");
        jbtBuscarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarClientesActionPerformed(evt);
            }
        });

        jbtCancelarClientes.setText("Cancelar");
        jbtCancelarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarClientesActionPerformed(evt);
            }
        });

        jbtVolver.setText("Volver");
        jbtVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVolverActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Personales:"));

        jLabel2.setText("Nombre Completo:");

        jtfNombreCliente.setEnabled(false);

        jLabel3.setText("Teléfono Contacto:");

        jtfTelefonoCliente.setEnabled(false);
        jtfTelefonoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTelefonoClienteActionPerformed(evt);
            }
        });

        jLabel4.setText("Correo Electrónico:");

        jtfCorreoElectronicoCliente.setEnabled(false);

        jLabel5.setText("Comuna:");

        jcbComunaCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<<Seleccionar Comuna>", "Cerrillos", "La Reina", "Pudahuel", "Cerro Navia", "Las Condes", "Quilicura", "Conchalí", "Lo Barnechea", "Quinta Normal", "El Bosque", "Lo Espejo", "Recoleta", "Estación Central", "Lo Prado", "Renca", "Huechuraba", "Macul", "San Miguel", "Independencia", "Maipú", "San Joaquín", "La Cisterna", "Ñuñoa", "San Ramón", "La Florida", "Pedro Aguirre Cerda", "Santiago", "La Pintana", "Peñalolén", "Vitacura", "La Granja", "Providencia" }));
        jcbComunaCliente.setEnabled(false);

        jLabel6.setText("Dirección:");

        jtfDireccionCliente.setEnabled(false);

        jbtGuardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtGuardar.setText("Guardar Datos");
        jbtGuardar.setEnabled(false);
        jbtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCorreoElectronicoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbComunaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfTelefonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfCorreoElectronicoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jcbComunaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jtfDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jbtGuardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfRut))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtBuscarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtCancelarClientes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtBuscarClientes)
                    .addComponent(jbtCancelarClientes)
                    .addComponent(jbtVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(482, 463));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGuardarActionPerformed
        // TODO add your handling code here:
        switch(opcion)
        {
            case 1://Ingreso
                        //Validar Campos:
                        validaciones();
                        //Crear Mensajes
                        mensaje = "Cliente Registrado Exitosamente";
                        menError = "Cliente Existente en la Base de Datos";
                        //Lectura de datos desde el formulario
                        rut_cliente = jtfRut.getText();
                        nom_cliente = jtfNombreCliente.getText();
                        telefono_cliente = jtfTelefonoCliente.getText();
                        correo_cliente = jtfCorreoElectronicoCliente.getText();
                        comuna_cliente = (String) (jcbComunaCliente.getSelectedItem());
                        direccion_cliente = jtfDireccionCliente.getText();
                        //Abrir Conexión Base de Datos:
                        tablaClientes mysql = new tablaClientes();
                        java.sql.Connection cn = mysql.Conectar();
                        //Escribir Consulta MySQL
                        sql = "insert into Clientes (rut_cliente, nom_cliente, telefono_cliente, correo_cliente, comuna_cliente,"
                                + " direccion_cliente)  values (?,?,?,?,?,?)";
                        //Ejecutar la consulta llenando los parametros con los valores capturados:
                        try
                        {
                            PreparedStatement pst= cn.prepareStatement(sql);
                            pst.setString(1, rut_cliente);
                            pst.setString(2, nom_cliente);
                            pst.setString(3, telefono_cliente);
                            pst.setString(4, correo_cliente);
                            pst.setString(5, comuna_cliente);
                            pst.setString(6, direccion_cliente);
                            int n = pst.executeUpdate();
                            opcion = 0;
                            opcion = JOptionPane.showConfirmDialog(this,
                                    "¿Guardar Datos?",
                                    "GUARDAR",
                                    JOptionPane.YES_NO_OPTION,
                                    JOptionPane.QUESTION_MESSAGE);
                            if(opcion == JOptionPane.YES_OPTION)
                            {
                                JOptionPane.showMessageDialog(null, mensaje);
                            }
                            else
                            {
                                limpiarCampos();
                            }
                            cerrarVentana();
                            break;
                        }
                        catch(SQLException ex)
                        {
                            JOptionPane.showMessageDialog(this,
                            "Cliente ya Existe",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                        }
                break;
                
            case 2://Modificar 
                        //Crear Mensajes
                        //mensaje = "Cliente Actualizado Correctamente";
                        //menError = "Cliente Existente en la Base de Datos";
                        //Lectura de datos desde el formulario
                        rut_cliente = jtfRut.getText();
                        nom_cliente = jtfNombreCliente.getText();
                        telefono_cliente = jtfTelefonoCliente.getText();
                        correo_cliente = jtfCorreoElectronicoCliente.getText();
                        comuna_cliente = (String) (jcbComunaCliente.getSelectedItem());
                        direccion_cliente = jtfDireccionCliente.getText();
                        //Abrir Conexión Base de Datos:
                        tablaClientes update = new tablaClientes();
                        java.sql.Connection cnup = update.Conectar();
                        //Escribir Consulta MySQL
                        sql = "select * from Clientes where rut_cliente = '"+rut_cliente+"';";
                        //Ejecutar la consulta llenando los parametros con los valores capturados:
                        try
                        {
                            java.sql.Statement st =cnup.createStatement();
                            ResultSet rs = st.executeQuery(sql);
                            if(rs.next())
                            {
                                int id_cliente = rs.getInt(1);
                                System.out.println("ID = "+id_cliente);
                                sql = "update Clientes set rut_cliente = '"+rut_cliente+"'"
                                        + "where id_cliente = '"+id_cliente+"';";
                                opcion = 0;
                                opcion = JOptionPane.showConfirmDialog(this,
                                        "¿Actualizar Datos?",
                                        "ACTUALIZAR",
                                        JOptionPane.YES_NO_OPTION,
                                        JOptionPane.QUESTION_MESSAGE);
                                if(opcion == JOptionPane.YES_OPTION)
                                {
                                    cerrarVentana();
                                }
                                else
                                {
                                    limpiarCampos();
                                }
                            }
                            return;
                        }
                        catch(SQLException ex)
                        {
                            JOptionPane.showMessageDialog(this,
                            "Cliente No Existe",
                            "ERROR",
                            JOptionPane.ERROR_MESSAGE);
                        }
                break;
        }
    }//GEN-LAST:event_jbtGuardarActionPerformed

    private void jbtBuscarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarClientesActionPerformed
        // TODO add your handling code here:
        if(this.jtfRut.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Debes Ingresar RUT",
                    "ERROR DE INGRESO",
                    JOptionPane.ERROR_MESSAGE);
            this.jtfRut.requestFocus();
            return;
        }
        rut_cliente = jtfRut.getText();     
        confirmarRut();
        tablaPresupuesto mysql = new tablaPresupuesto();
        java.sql.Connection cn = mysql.Conectar();
        sql = "select * from Clientes where rut_cliente='"+rut_cliente+"';";
        try
        {
            java.sql.Statement st =cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if(rs.next())
            {
                switch (opcion)
                {
                    case 1:
                        JOptionPane.showMessageDialog(null, 
                                "El Usuario ya Existe");
                        cerrarVentana();
                        break;
                    case 2:
                        jtfNombreCliente.setText(rs.getString(3) );
                        jtfTelefonoCliente.setText(rs.getString(4));
                        jtfCorreoElectronicoCliente.setText(rs.getString(5));
                        jcbComunaCliente.setSelectedItem(rs.getString(6));
                        jtfDireccionCliente.setText(rs.getString(7));
                        break;
                }
            }
            else
            {
                switch(opcion)
                {
                    case 1:
                        jtfNombreCliente.requestFocus();
                        break;
                    case 2:
                        JOptionPane.showMessageDialog(null,"El RUT Ingresado No Existe");
                        cerrarVentana();
                        break;
                }
            }
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null,
                    "Error de Lectura en la Base de Datos");
        }
        
    }//GEN-LAST:event_jbtBuscarClientesActionPerformed

    public void cerrarVentana()
    {
        this.setVisible(false);
        mp=new MantenedorPer();
        mp.setVisible(true);
    }
    public void volverMantenedor()
    {
        limpiarCampos();
        this.setVisible(false);
        mp = new MantenedorPer();
        mp.setVisible(true);
    }
    private void jbtCancelarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarClientesActionPerformed
        // TODO add your handling code here:
        opcion = 0;
        opcion = JOptionPane.showConfirmDialog(this,
                "¿Deseas Cancelar Datos?",
                "CANCELAR",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if(opcion==JOptionPane.YES_OPTION)
        {
            limpiarCampos();
            
        }
    }//GEN-LAST:event_jbtCancelarClientesActionPerformed

    private void jbtVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVolverActionPerformed
        // TODO add your handling code here:
        opcion = 0;
        opcion = JOptionPane.showConfirmDialog(this,
                "¿Deseas Salir?",
                "Salir",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if(opcion==JOptionPane.YES_OPTION)
        {
            this.setVisible(false);
            mp = new MantenedorPer();
            mp.setVisible(true);
        }
        else
        {
            jtfRut.requestFocus();
        }
    }//GEN-LAST:event_jbtVolverActionPerformed

    private void jtfTelefonoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTelefonoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTelefonoClienteActionPerformed

    private boolean validarRut()
    {
        boolean valido = true;        
        int suma = 0;
        int pond = 2;
        int resto = 0;
        int valor = 0;
        String digito = "";
        int largo = 0;
        
        largo = this.jtfRut.getText().trim().length() - 2;
        
        for(int i=largo-1; i>-1; i--)
        {
            suma = suma + 
            (Integer.parseInt(""+this.jtfRut.getText().trim().charAt(i)) * pond);
            pond++;
            if(pond > 7)
            {
                pond = 2;
            }
        }
        resto = suma % 11;
        valor = 11 - resto;
        if(valor == 10)
        {
            digito = "K";
        }
        else if(valor == 11)
        {
            digito = "0";
        }
        else
        {
            digito = "" + valor;
        }
        
        if(digito.charAt(0) != 
                this.jtfRut.getText().trim().charAt(largo+1))
        {
            valido = false;
        }
        
        return valido;
    }
    private void  confirmarRut()
    {
        if(this.validarRut() == false)
        {
            JOptionPane.showMessageDialog(this,
                    "RUT Invalido",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE);
            jtfRut.setText("");
            jtfRut.requestFocus();
            return;
        }
        else
        {
            JOptionPane.showMessageDialog(null,
                    "RUT valido");
            habilitarPanel();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngresoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngresoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngresoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngresoClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MantenedorPer().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton jbtBuscarClientes;
    private javax.swing.JButton jbtCancelarClientes;
    private javax.swing.JButton jbtGuardar;
    private javax.swing.JButton jbtVolver;
    private javax.swing.JComboBox jcbComunaCliente;
    private javax.swing.JTextField jtfCorreoElectronicoCliente;
    private javax.swing.JTextField jtfDireccionCliente;
    private javax.swing.JTextField jtfNombreCliente;
    private javax.swing.JTextField jtfRut;
    private javax.swing.JTextField jtfTelefonoCliente;
    // End of variables declaration//GEN-END:variables

    
}
